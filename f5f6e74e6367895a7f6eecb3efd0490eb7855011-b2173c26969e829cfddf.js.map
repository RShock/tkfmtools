{"version":3,"sources":["webpack://tkfmtools/./src/components/Head.js","webpack://tkfmtools/./src/components/Header.js"],"names":["title","description","path","useLanguage","isDefault","userLanguage","url","split","slice","join","name","content","property","lang","StyledHeader","styled","props","$border","theme","colors","border","onSurface","TitleWrapper","className","titleIcon","withHelp","onClickHelp","end","id","onClick","tooltipText","HelpIcon"],"mappings":"iJAKA,aAAe,GAAmC,IAAhCA,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAAW,GACTC,SAA5BC,EADqC,EACrCA,UAAWC,EAD0B,EAC1BA,aACbC,EAAe,MAATJ,EAAe,GAAKA,EAAKK,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,KAElE,OACI,gBAAC,IAAD,KACI,wBAAMC,KAAK,QAAQC,QAASX,IAC5B,wBAAMU,KAAK,cAAcC,QAASV,IAClC,wBAAMW,SAAS,WAAWD,QAASX,IACnC,wBAAMY,SAAS,iBAAiBD,QAASV,IACzC,wBAAMW,SAAS,gBAAgBD,QAASX,IACxC,wBAAMY,SAAS,sBAAsBD,QAASV,IAC9C,wBACIW,SAAS,SACTD,QAAO,4CAA8CP,EAC/C,GAAM,IAAMC,GAAiBH,IAEvC,wBACIU,SAAS,WACTD,QAAO,2DAA6DL,GAC7DF,EAAY,GAAK,OADjB,SAGX,wBACIQ,SAAS,cACTD,QAAO,4CAA8CP,EAC/C,GAAM,IAAMC,GAAiBH,IAEvC,wBACIU,SAAS,gBACTD,QAAO,2DAA6DL,GAC7DF,EAAY,GAAK,OADjB,SAGX,yBAAOS,KAAMR,GAAeL,M,mFC/B3Bc,EAAeC,oBAAH,4DAAGA,CAAH,sJAMnB,SAAAC,GAAK,OAAIA,EAAMC,QAAN,4BAA4CD,EAAME,MAAMC,OAAOC,OAA/D,IAA2E,MAC7E,SAAAJ,GAAK,OAAIA,EAAME,MAAMC,OAAOE,aAI5BC,EAAeP,oBAAH,4DAAGA,CAAH,+MAaL,SAAAC,GAAK,OAAIA,EAAME,MAAMC,OAAOE,aA6BhD,KAzBe,SAAC,GAAD,IACXE,EADW,EACXA,UACAvB,EAFW,EAEXA,MACAwB,EAHW,EAGXA,UACAC,EAJW,EAIXA,SACAC,EALW,EAKXA,YACAC,EANW,EAMXA,IACAC,EAPW,EAOXA,GACAR,EARW,EAQXA,OARW,OAUP,gBAACN,EAAD,CAAcS,UAAWA,EAAWN,QAASG,GACzC,gBAACE,EAAD,KACI,wBAAMM,GAAIA,GAAKJ,EAAWxB,GACzByB,GAAYC,GACT,gBAAC,KAAD,CACIG,QAASH,EACTI,YAAY,QAEXC,OAGZJ,GAAO,2BAAMA,M","file":"f5f6e74e6367895a7f6eecb3efd0490eb7855011-b2173c26969e829cfddf.js","sourcesContent":["import React from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { useLanguage } from 'containers/LanguageProvider';\r\n\r\nexport default ({ title, description, path }) => {\r\n    const { isDefault, userLanguage } = useLanguage()\r\n    const url = path === '/' ? '' : path.split('/').slice(0, -1).join('_')\r\n\r\n    return (\r\n        <Helmet>\r\n            <meta name=\"title\" content={title} />\r\n            <meta name=\"description\" content={description} />\r\n            <meta property=\"og:title\" content={title} />\r\n            <meta property=\"og:description\" content={description} />\r\n            <meta property=\"twitter:title\" content={title} />\r\n            <meta property=\"twitter:description\" content={description} />\r\n            <meta\r\n                property=\"og:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"og:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_en')}.png`}\r\n            />\r\n            <meta\r\n                property=\"twitter:url\"\r\n                content={`https://purindaisuki.github.io/tkfmtools${(isDefault\r\n                    ? '' : ('/' + userLanguage)) + path}`}\r\n            />\r\n            <meta\r\n                property=\"twitter:image\"\r\n                content={`https://purindaisuki.github.io/tkfmtools/website_preview${url\r\n                    + (isDefault ? '' : '_en')}.png`}\r\n            />\r\n            <title lang={userLanguage}>{title}</title>\r\n        </Helmet>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { HeaderIconButton } from 'components/IconButton';\r\nimport { HelpIcon } from 'components/icon';\r\n\r\nexport const StyledHeader = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    height: 2.2rem;\r\n    ${props => props.$border ? `border-bottom: solid 1px ${props.theme.colors.border};` : ''}\r\n    color: ${props => props.theme.colors.onSurface};\r\n    font-size: large;\r\n    font-weight: normal;\r\n`\r\nexport const TitleWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    > span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        line-height: normal;\r\n        svg {\r\n            width: 1.2rem;\r\n            height: 1.2rem;\r\n            margin-right: .4rem;\r\n            margin-bottom: .2rem;\r\n            fill: ${props => props.theme.colors.onSurface};\r\n        }\r\n    }\r\n`\r\nconst Header = ({\r\n    className,\r\n    title,\r\n    titleIcon,\r\n    withHelp,\r\n    onClickHelp,\r\n    end,\r\n    id,\r\n    border\r\n}) => (\r\n        <StyledHeader className={className} $border={border}>\r\n            <TitleWrapper>\r\n                <span id={id}>{titleIcon}{title}</span>\r\n                {withHelp && onClickHelp &&\r\n                    <HeaderIconButton\r\n                        onClick={onClickHelp}\r\n                        tooltipText='Help'\r\n                    >\r\n                        {HelpIcon}\r\n                    </HeaderIconButton>}\r\n            </TitleWrapper>\r\n            {end && <div>{end}</div>}\r\n        </StyledHeader>\r\n    )\r\n\r\nexport default Header"],"sourceRoot":""}