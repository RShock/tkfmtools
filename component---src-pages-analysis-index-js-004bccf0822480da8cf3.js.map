{"version":3,"sources":["webpack://tkfmtools/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://tkfmtools/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack://tkfmtools/./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack://tkfmtools/./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack://tkfmtools/./src/components/PotentialInput.js","webpack://tkfmtools/./src/data/charMap.js","webpack://tkfmtools/./src/hooks/useCharacterSelect.js","webpack://tkfmtools/./src/data/charByPosition.js","webpack://tkfmtools/./src/pages/analysis/index.js"],"names":["createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","SwitchBase","type","root","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","name","Wrapper","styled","StyledInput","Input","colors","dropdownHover","onSurface","StyledSelect","Select","Title","CheckboxGrid","Grid","chart","$type","StyledCheckbox","Indicator","$checked","className","charId","values","mainValue","subValue","onMainChange","onSubChange","rest","useTheme","pageString","useLanguage","potentialType","charMap","buffs","potentialData","pattern","map","p","select","SelectProps","multiple","value","renderValue","MenuProps","PaperProps","style","surface","MenuListProps","width","padding","dense","variant","container","item","xs","analysis","index","primaryPotentialTitle","component","onChange","secondaryPotentialTitle","boolean","ind","key","disableRipple","require","reduce","c","id","module","exports","getCharSelects","charState","star","imgNames","Array","keys","slice","bond","discipline","potential","parseInt","potentialSub","fill","convertLegacyData","newPotentialSub","i","initCharState","onSelect","useState","selectItems","state","setState","setSelect","useCallback","newCharState","validatedValue","isNaN","from","newCharSelects","Object","entries","forEach","entry","includes","setCharState","charsData","newData","tags","position","push","StyledCharContainer","CharImgWrapper","Button","$owned","CharImg","ImageSupplier","LevelInput","SelectGrid","SelectWrapper","CharContainer","charString","useLineupData","currentLineup","setCurrentLineup","actions","newLineup","calcCharStats","owned","level","useCharacterSelect","useEffect","handleBtnClick","handleSelectChange","event","target","handleSubChange","sm","md","lg","onClick","disableFocusRipple","alt","spacing","label","levelTitle","margin","disciplineTitle","starTitle","PotentialInput","potentialTitle","DataButtonContainer","DataManageButtons","handleData","handleModalOpen","IconButton","tooltipText","saveButton","SaveIcon","loadButton","LoadIcon","DataModal","localLineups","Header","title","date","end","deleteButton","DeleteIcon","CharGroupsContainer","PositionImgWrapper","pushLineup","getLineup","deleteLineup","isDataModalOpen","isHelpModalOpen","isSuccessSnackbarOpen","isErrorSnackbarOpen","firebase","loadedData","handleDataModal","handleHelpModal","positionImg","Head","helmet","description","path","charByPositionData","group","titleIcon","withHelp","onClickHelp","border","Snackbar","open","onClose","message","successMsg","errorMsg","modalTitle","ariaLabelledby","ariaDescribedby","helpModal","content"],"mappings":"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","file":"component---src-pages-analysis-index-js-004bccf0822480da8cf3.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\r\nimport styled, { useTheme } from 'styled-components';\r\nimport { Checkbox, Grid } from '@material-ui/core';\r\n\r\nimport { useLanguage } from 'containers/LanguageProvider';\r\n\r\nimport Input, { Select } from 'components/Input';\r\n\r\nimport charMap from 'data/charMap';\r\nimport potentialData from 'data/potential.json';\r\n\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n`\r\nconst StyledInput = styled(Input)`\r\n    && {\r\n        width: 100%;\r\n        > div {\r\n            color: ${props => props.disabled ? props.theme.colors.dropdownHover\r\n        : 'inherit'};\r\n        }\r\n        svg {\r\n            right: 0;\r\n            fill: ${props => props.disabled ? props.theme.colors.dropdownHover\r\n        : props.theme.colors.onSurface};\r\n        }\r\n    }\r\n`\r\nconst StyledSelect = styled(Select)`\r\n    && {\r\n        margin: .3rem;\r\n        > div > div {\r\n            padding: .6rem;\r\n            padding-right: 2rem;\r\n        }\r\n    }\r\n`\r\nconst Title = styled.span`\r\n    margin-left: .4rem;\r\n    font-size: 75%;\r\n`\r\nconst CheckboxGrid = styled(Grid)` \r\n    &&.Mui-checked svg {\r\n        fill: ${props => props.theme.chart.colors[\r\n            props.$type === 'ATK' ? 0 : props.$type === 'HP' ? 2 : 4\r\n        ]};\r\n    }\r\n`\r\nconst StyledCheckbox = styled(Checkbox)`\r\n    && {\r\n        padding: 0;\r\n        svg {\r\n            fill: ${props => props.theme.colors.dropdownHover};\r\n        }\r\n    }\r\n`\r\nconst Indicator = styled.span`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: -.6rem;\r\n    width: calc(100%/6 - 4px);\r\n    height: 4px;\r\n    margin: 0 2px;\r\n    background-color: ${props => !props.$checked ? props.theme.colors.dropdownHover :\r\n        props.theme.chart.colors[props.$type === 'ATK' ? 0 : props.$type === 'HP' ? 2 : 4]};\r\n`\r\nconst PotentialInput = ({\r\n    className,\r\n    charId,\r\n    values, mainValue, subValue,\r\n    onMainChange, onSubChange,\r\n    ...rest\r\n}) => {\r\n    const { colors } = useTheme()\r\n    const { pageString } = useLanguage()\r\n\r\n    const { potentialType } = charMap[charId]\r\n\r\n    const buffs = potentialData.type[potentialType][mainValue - 1].pattern\r\n        .map(p => potentialData.itemMap[p].type)\r\n\r\n    return (\r\n        <Wrapper className={className}>\r\n            <StyledInput\r\n                select\r\n                SelectProps={{\r\n                    multiple: true,\r\n                    value: subValue,\r\n                    renderValue: () => mainValue,\r\n                    MenuProps: {\r\n                        PaperProps: {\r\n                            style: {\r\n                                backgroundColor: colors.surface,\r\n                            }\r\n                        },\r\n                        MenuListProps: {\r\n                            style: {\r\n                                width: '12rem',\r\n                                padding: '.5rem',\r\n                                backgroundColor: colors.surface,\r\n                                color: colors.onSurface,\r\n                            },\r\n                            dense: true,\r\n                        }\r\n                    }\r\n                }}\r\n                {...rest}\r\n                variant='outlined'\r\n            >\r\n                <Grid container>\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                    >\r\n                        <Title>{pageString.analysis.index.primaryPotentialTitle}</Title>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        component={StyledSelect}\r\n                        values={values}\r\n                        value={mainValue}\r\n                        onChange={onMainChange}\r\n                    />\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                    >\r\n                        <Title>{pageString.analysis.index.secondaryPotentialTitle}</Title>\r\n                    </Grid>\r\n                    {subValue.map((boolean, ind) => (\r\n                        <CheckboxGrid\r\n                            item\r\n                            key={ind}\r\n                            xs={2}\r\n                            component={StyledCheckbox}\r\n                            checked={boolean}\r\n                            onChange={onSubChange(ind)}\r\n                            disableRipple\r\n                            inputProps={{ 'aria-label': 'potential-substage' + ind }}\r\n                            $type={buffs[ind]}\r\n                        />\r\n                    ))}\r\n                </Grid>\r\n            </StyledInput>\r\n            {subValue.map((boolean, ind) => (\r\n                <Indicator $checked={boolean} key={ind} $type={buffs[ind]} />\r\n            ))}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default PotentialInput","const charData = require('./character.json');\r\n\r\nconst charMap = charData.reduce((map, c) => {\r\n    const { id, ...rest } = c\r\n    map[id] = rest\r\n    return map\r\n}, {})\r\n\r\nmodule.exports = charMap","import { useCallback, useState } from 'react';\r\n\r\nconst getCharSelects = (charState) => ({\r\n    star: {\r\n        imgNames: 'ui_star_' + (charState.id[0] === '1' ? 'ssr'\r\n            : charState.id[0] === '2' ? 'sr'\r\n                : charState.id[0] === '3' ? 'r' : 'n'),\r\n        values: [...Array(6).keys()].slice(4 - charState.id[0]),\r\n        disabled: false,\r\n    },\r\n    bond: {\r\n        imgNames: 'ui_bond_' + charState.bond,\r\n        values: [...Array(6).keys()].slice(1),\r\n        disabled: false,\r\n    },\r\n    discipline: {\r\n        imgNames: 'ui_discipline',\r\n        values: charState.id[0] === '4' ? ['-'] : [...Array(4).keys()],\r\n        disabled: charState.id[0] === '4',\r\n    },\r\n    potential: {\r\n        imgNames: 'ui_potentialPassive',\r\n        values: [...Array(parseInt(charState.id[0]) > 2 ? 7 : 13).keys()].slice(1),\r\n        disabled: false,\r\n    },\r\n    potentialSub: {\r\n        imgNames: undefined,\r\n        values: Array(6).fill(false),\r\n        disabled: false,\r\n    }\r\n})\r\n\r\nconst convertLegacyData = (charState) => {\r\n    if (typeof charState.potentialSub !== 'object') {\r\n        const newPotentialSub = [...Array(6).keys()].map(i => i < charState.potentialSub)\r\n        charState.potentialSub = newPotentialSub\r\n    }\r\n\r\n    return charState\r\n}\r\n\r\nconst useCharacterSelect = (initCharState, onSelect) => {\r\n    const [state, setState] = useState({\r\n        charState: convertLegacyData(initCharState),\r\n        selectItems: getCharSelects(initCharState),\r\n    })\r\n\r\n    const setSelect = useCallback((key, value) => {\r\n        const newCharState = { ...state.charState }\r\n\r\n        let validatedValue = value\r\n        // validate state values\r\n        if (key === 'level') {\r\n            validatedValue = isNaN(value) ? ''\r\n                : value < 1 ? 1\r\n                    : value > 60 ? 60 : value\r\n        } else if (key === 'potentialSub') {\r\n            validatedValue = Array.from(newCharState.potentialSub)\r\n            // value as index\r\n            validatedValue[value] = !validatedValue[value]\r\n        }\r\n\r\n        newCharState[key] = validatedValue\r\n\r\n        const newCharSelects = getCharSelects(newCharState)\r\n\r\n        Object.entries(newCharSelects).forEach(entry => {\r\n            if (entry[0] === 'potentialSub') {\r\n                return true\r\n            }\r\n\r\n            const values = entry[1].values\r\n            if (!values.includes(newCharState[entry[0]])) {\r\n                newCharState[entry[0]] = values[0]\r\n            }\r\n        })\r\n\r\n        setState({\r\n            charState: newCharState,\r\n            selectItems: newCharSelects,\r\n        })\r\n\r\n        onSelect(newCharState)\r\n    }, [state, onSelect])\r\n\r\n    const setCharState = useCallback((charState) => setState({\r\n        charState: convertLegacyData(charState),\r\n        selectItems: getCharSelects(charState),\r\n    }), [])\r\n\r\n    return { ...state, setSelect, setCharState }\r\n}\r\n\r\nexport default useCharacterSelect","import charsData from 'data/character.json';\r\n\r\nconst charByPosition = charsData.reduce((newData, c, i) => {\r\n    newData[c.tags.position - 5].push({ id: c.id, ind: i })\r\n    return newData\r\n}, [...Array(5)].map(i => []))\r\n\r\nexport default charByPosition","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Grid } from '@material-ui/core';\r\n\r\nimport useCharacterSelect from 'hooks/useCharacterSelect';\r\n\r\nimport { useLineupData } from 'containers/LineupDataProvider';\r\nimport { useLanguage } from 'containers/LanguageProvider';\r\n\r\nimport Head from 'components/Head';\r\nimport ImageSupplier from 'components/ImageSupplier';\r\nimport Input, { Select } from 'components/Input';\r\nimport PotentialInput from 'components/PotentialInput';\r\nimport Header from 'components/Header';\r\nimport IconButton from 'components/IconButton';\r\nimport { SaveIcon, LoadIcon, DeleteIcon } from 'components/icon';\r\nimport Snackbar from 'components/Snackbar';\r\nimport { ScrollableModal, TextModal } from 'components/Modal';\r\n\r\nimport calcCharStats from 'utils/calcCharStats';\r\nimport charByPositionData from 'data/charByPosition'\r\n\r\nconst StyledCharContainer = styled(Grid)`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-bottom: 2rem;\r\n    margin-right: 2rem;\r\n    && {\r\n        max-width: 30rem;\r\n    }\r\n`\r\nconst CharImgWrapper = styled(Button)`\r\n    ${props => props.$owned ? null : 'filter: grayscale(100%);'}\r\n    && {\r\n        transition: filter 0.1s ease;\r\n    }\r\n`\r\nconst CharImg = styled(ImageSupplier)`\r\n    width: 7rem;\r\n    height: 7rem;\r\n`\r\nconst LevelInput = styled(Input)`\r\n    && {\r\n        input {\r\n            padding: .6rem 1rem;\r\n        }\r\n        color: ${props => props.disabled ? props.theme.colors.dropdownHover\r\n        : 'inherit'};\r\n    }\r\n`\r\nconst StyledSelect = styled(Select)`\r\n    && {\r\n        width: 100%;\r\n        > div > div {\r\n            padding: .6rem 1rem;\r\n            padding-right: 2rem;\r\n            color: ${props => props.disabled ? props.theme.colors.dropdownHover\r\n        : 'inherit'};\r\n        }\r\n        svg {\r\n            fill: ${props => props.disabled ? props.theme.colors.dropdownHover\r\n        : props.theme.colors.onSurface};\r\n        }\r\n    }\r\n`\r\nconst SelectGrid = styled(Grid)`\r\n    align-content: center;\r\n`\r\nconst SelectWrapper = styled(Grid)`\r\n    height: 40%;\r\n`\r\nconst CharContainer = ({ index }) => {\r\n    const { pageString, charString } = useLanguage()\r\n\r\n    const { currentLineup, actions } = useLineupData()\r\n    const { setCurrentLineup } = actions\r\n\r\n    const charState = currentLineup[index]\r\n\r\n    const onSelect = useCallback((newCharState) => {\r\n        const newLineup = Array.from(currentLineup)\r\n\r\n        newLineup[index] = {\r\n            ...newCharState,\r\n            ...calcCharStats(newCharState),\r\n            owned: newCharState.level !== 0\r\n        }\r\n\r\n        setCurrentLineup(newLineup)\r\n    }, [currentLineup[index], setCurrentLineup])\r\n\r\n    const { selectItems, setSelect, setCharState } = useCharacterSelect(charState, onSelect)\r\n\r\n    useEffect(() => {\r\n        setCharState(charState)\r\n    }, [charState])\r\n\r\n    const handleBtnClick = useCallback(() => {\r\n        const newLineup = Array.from(currentLineup)\r\n\r\n        newLineup[index].owned = !newLineup[index].owned\r\n\r\n        setCurrentLineup(newLineup)\r\n    }, [currentLineup[index], setCurrentLineup])\r\n\r\n    const handleSelectChange = useCallback((key) => (event) => {\r\n        setSelect(key, parseInt(event.target.value))\r\n    }, [setSelect])\r\n\r\n    const handleSubChange = useCallback((index) => () => {\r\n        setSelect('potentialSub', index)\r\n    }, [setSelect])\r\n\r\n    return (\r\n        <StyledCharContainer item xs={10} sm={6} md={5} lg={4}>\r\n            <CharImgWrapper\r\n                onClick={handleBtnClick}\r\n                $owned={charState.owned}\r\n                disableRipple\r\n                disableFocusRipple\r\n            >\r\n                <CharImg\r\n                    name={`char_small_${charState.id}`}\r\n                    alt={charString.name[charState.id]}\r\n                />\r\n            </CharImgWrapper>\r\n            <SelectGrid container spacing={1}>\r\n                <SelectWrapper item xs={6}>\r\n                    <LevelInput\r\n                        label={pageString.analysis.index.levelTitle}\r\n                        value={charState.level}\r\n                        onChange={handleSelectChange('level')}\r\n                        disabled={!charState.owned}\r\n                        variant='outlined'\r\n                        size='small'\r\n                        margin='dense'\r\n                    />\r\n                </SelectWrapper>\r\n                <SelectWrapper item xs={6}>\r\n                    <StyledSelect\r\n                        label={pageString.analysis.index.disciplineTitle}\r\n                        values={selectItems.discipline.values}\r\n                        value={charState.id[0] === '4' ? '-' : charState.discipline}\r\n                        onChange={handleSelectChange('discipline')}\r\n                        disabled={!charState.owned || charState.id[0] === '4'}\r\n                        margin='dense'\r\n                    />\r\n                </SelectWrapper>\r\n                <SelectWrapper item xs={6}>\r\n                    <StyledSelect\r\n                        label={pageString.analysis.index.starTitle}\r\n                        values={selectItems.star.values}\r\n                        value={charState.star}\r\n                        onChange={handleSelectChange('star')}\r\n                        disabled={!charState.owned}\r\n                        margin='dense'\r\n                    />\r\n                </SelectWrapper>\r\n                <SelectWrapper item xs={6}>\r\n                    <PotentialInput\r\n                        charId={charState.id}\r\n                        label={pageString.analysis.index.potentialTitle}\r\n                        values={selectItems.potential.values}\r\n                        mainValue={charState.potential}\r\n                        subValue={charState.potentialSub}\r\n                        onMainChange={handleSelectChange('potential')}\r\n                        onSubChange={handleSubChange}\r\n                        disabled={!charState.owned}\r\n                        margin='dense'\r\n                    />\r\n                </SelectWrapper>\r\n            </SelectGrid>\r\n        </StyledCharContainer>\r\n    )\r\n}\r\n\r\nconst DataButtonContainer = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: -4rem;\r\n    margin-bottom : 0;\r\n    > span:last-child button {\r\n        margin: 0;\r\n    }\r\n`\r\nconst DataManageButtons = ({ handleData, handleModalOpen }) => {\r\n    const { pageString } = useLanguage()\r\n\r\n    return (\r\n        <DataButtonContainer>\r\n            <IconButton\r\n                onClick={handleData('save')}\r\n                tooltipText={pageString.analysis.index.saveButton}\r\n            >\r\n                {SaveIcon}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleModalOpen}\r\n                tooltipText={pageString.analysis.index.loadButton}\r\n            >\r\n                {LoadIcon}\r\n            </IconButton>\r\n        </DataButtonContainer>\r\n    )\r\n}\r\n\r\nconst DataModal = ({ handleData }) => {\r\n    const { pageString } = useLanguage()\r\n\r\n    const { localLineups } = useLineupData()\r\n\r\n    if (!localLineups) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        localLineups.map((d, ind) => (\r\n            <Header\r\n                title={d.date}\r\n                end={<>\r\n                    <IconButton\r\n                        onClick={handleData('load', ind)}\r\n                        tooltipText={pageString.analysis.index.loadButton}\r\n                    >\r\n                        {LoadIcon}\r\n                    </IconButton>\r\n                    <IconButton\r\n                        onClick={handleData('delete', ind)}\r\n                        tooltipText={pageString.analysis.index.deleteButton}\r\n                    >\r\n                        {DeleteIcon}\r\n                    </IconButton>\r\n                </>}\r\n                key={ind}\r\n            />\r\n        ))\r\n    )\r\n}\r\n\r\nconst CharGroupsContainer = styled.div`\r\n    width: 100%;\r\n    > div:nth-child(even) > div > span {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: .4rem;\r\n    }\r\n    > div:nth-child(2) > div {\r\n        width: 100%;\r\n        justify-content: space-between;\r\n    }\r\n`\r\nconst PositionImgWrapper = styled(ImageSupplier)`\r\n    width: 2rem;\r\n    margin-right: .2rem;\r\n`\r\nconst Index = () => {\r\n    const { pageString, charString } = useLanguage()\r\n\r\n    const { currentLineup, actions } = useLineupData()\r\n    const { pushLineup, getLineup, deleteLineup, setCurrentLineup } = actions\r\n\r\n    const [state, setState] = useState({\r\n        isDataModalOpen: false,\r\n        isHelpModalOpen: false,\r\n        isSuccessSnackbarOpen: false,\r\n        isErrorSnackbarOpen: false\r\n    })\r\n\r\n    const handleData = (action, ind) => () => {\r\n        switch (action) {\r\n            case 'save':\r\n                if (pushLineup(currentLineup, { firebase: true })) {\r\n                    setState(state => ({ ...state, isSuccessSnackbarOpen: true }))\r\n\r\n                    return\r\n                }\r\n\r\n            case 'load':\r\n                const loadedData = getLineup(ind)\r\n                if (loadedData) {\r\n                    setState(state => ({\r\n                        ...state,\r\n                        isSuccessSnackbarOpen: true,\r\n                        isDataModalOpen: false\r\n                    }))\r\n\r\n                    setCurrentLineup(loadedData)\r\n\r\n                    return\r\n                }\r\n\r\n            case 'delete':\r\n                if (deleteLineup(ind)) {\r\n                    setState(state => ({\r\n                        ...state,\r\n                        isDataModalOpen: true,\r\n                    }))\r\n\r\n                    return\r\n                }\r\n\r\n            default: break\r\n        }\r\n\r\n        setState(state => ({\r\n            ...state,\r\n            isErrorSnackbarOpen: true,\r\n        }))\r\n    }\r\n\r\n    const handleSuccessSnackbarClose = () => {\r\n        setState((state) => ({ ...state, isSuccessSnackbarOpen: false }))\r\n    }\r\n\r\n    const handleErrorSnackbarClose = () => {\r\n        setState((state) => ({ ...state, isErrorSnackbarOpen: false }))\r\n    }\r\n\r\n    const handleDataModal = (boolean) => () => {\r\n        setState(state => ({ ...state, isDataModalOpen: boolean }))\r\n    }\r\n\r\n    const handleHelpModal = (boolean) => () => {\r\n        setState(state => ({ ...state, isHelpModalOpen: boolean }))\r\n    }\r\n\r\n    const positionImg = [\r\n        'attacker',\r\n        'defender',\r\n        'healer',\r\n        'obsructer',\r\n        'supporter'\r\n    ]\r\n\r\n    return (\r\n        <CharGroupsContainer>\r\n            <Head\r\n                title={pageString.analysis.index.helmet.title}\r\n                description={pageString.analysis.index.helmet.description}\r\n                path='/analysis/'\r\n            />\r\n            <DataManageButtons handleData={handleData} handleModalOpen={handleDataModal(true)} />\r\n            {charByPositionData.map((group, ind) => (\r\n                <React.Fragment key={ind}>\r\n                    <Header\r\n                        title={charString.tags[ind + 5]}\r\n                        titleIcon={\r\n                            <PositionImgWrapper\r\n                                name={`ui_${positionImg[ind]}`}\r\n                                alt=''\r\n                            />\r\n                        }\r\n                        withHelp={ind === 0}\r\n                        onClickHelp={handleHelpModal(true)}\r\n                        border\r\n                    />\r\n                    <Grid container spacing={2}>\r\n                        {group.map(c => (\r\n                            <CharContainer\r\n                                index={c.ind}\r\n                                key={c.id}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                </React.Fragment>\r\n            ))}\r\n            <Snackbar\r\n                open={state.isSuccessSnackbarOpen}\r\n                onClose={handleSuccessSnackbarClose}\r\n                message={pageString.analysis.index.successMsg}\r\n                type='success'\r\n            />\r\n            <Snackbar\r\n                open={state.isErrorSnackbarOpen}\r\n                onClose={handleErrorSnackbarClose}\r\n                message={pageString.analysis.index.errorMsg}\r\n                type='error'\r\n            />\r\n            <ScrollableModal\r\n                title={pageString.analysis.index.modalTitle}\r\n                open={state.isDataModalOpen}\r\n                onClose={handleDataModal(false)}\r\n                ariaLabelledby='data-operation-modal-title'\r\n                ariaDescribedby='data-operation-modal-description'\r\n            >\r\n                <DataModal\r\n                    handleData={handleData}\r\n                />\r\n            </ScrollableModal>\r\n            <TextModal\r\n                title={pageString.analysis.index.helpModal.title}\r\n                content={pageString.analysis.index.helpModal.content}\r\n                open={state.isHelpModalOpen}\r\n                onClose={handleHelpModal(false)}\r\n                ariaLabelledby='help-modal-title'\r\n                ariaDescribedby='help-modal-description'\r\n            />\r\n        </CharGroupsContainer>\r\n    )\r\n}\r\n\r\nexport default Index"],"sourceRoot":""}